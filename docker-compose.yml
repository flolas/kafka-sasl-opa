---
version: '2'
services:

  opa:
    container_name: opa
    hostname: opa.kafkasecurity_default
    image: openpolicyagent/opa:0.7.0
    ports:
      - 8181:8181
    command: "run --server --log-level=debug /data/kafka_authz.rego"
    volumes:
      - ./:/data

  kerberos:
    build:
      context: .
      dockerfile: Dockerfile.kerberos
    container_name: kerberos
    hostname: kerberos.kafkasecurity_default
    image: kerberos
    environment:
      BOOTSTRAP: 0
    volumes:
      - ./secrets:/tmp/keytab
      - /dev/urandom:/dev/random
      - ./logs:/var/log/kerberos

  zookeeper:
    build:
      context: .
      dockerfile: Dockerfile.zookeeper
    image: zookeeper
    restart: on-failure:3
    container_name: zookeeper
    hostname: zookeeper.kafkasecurity_default
    depends_on:
      - kerberos
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_1_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=false
    volumes:
      - ./secrets:/etc/kafka/secrets

  broker:
    build:
      context: .
      dockerfile: Dockerfile.broker
    image: broker
    restart: on-failure:3
    container_name: broker
    hostname: broker.kafkasecurity_default
    depends_on:
      - kerberos
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper
      KAFKA_ADVERTISED_LISTENERS: "SASL_SSL://broker:9093"
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker1_truststore_creds
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/broker1_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/krb.conf
        -Dsun.security.krb5.debug=false
      KAFKA_AUTHORIZER_CLASS_NAME: com.lbg.kafka.opa.OpaAuthorizer
      KAFKA_OPA_AUTHORIZER_URL: "http://opa.kafkasecurity_default:8181/v1/data/kafka/authz/allow"
      KAFKA_OPA_AUTHORIZER_ALLOW_ON_ERROR: "false"
      KAFKA_OPA_AUTHORIZER_CACHE_INITIAL_CAPACITY: 100
      KAFKA_OPA_AUTHORIZER_CACHE_MAXIMUM_SIZE: 100
      KAFKA_OPA_AUTHORIZER_CACHE_EXPIRE_AFTER_MS: 600000
      CLASSPATH: /jars/kafka-authorizer-opa-1.0-SNAPSHOT.jar:/jars/gson-2.8.2.jar
    volumes:
      - ./secrets:/etc/kafka/secrets
      - ./target/kafka-authorizer-opa-1.0-SNAPSHOT-package/share/java/kafka-authorizer-opa/:/jars

  producer:
    build:
      context: .
      dockerfile: Dockerfile.broker
    image: broker
    container_name: producer
    hostname: producer.kafkasecurity_default
    depends_on:
      - kerberos
      - zookeeper
      - broker
    command: >-
      bash -c "
      while true;
        do C=$$[$$C +1];
        echo $$C | kafka-console-producer --broker-list broker:9093 --topic X --producer.config /etc/kafka/secrets/host.producer.ssl.sasl.config;
        sleep 2;
      done"
    environment:
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/producer_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/krb.conf
    volumes:
      - ./secrets/:/etc/kafka/secrets
      - ./:/data


  consumer:
    build:
      context: .
      dockerfile: Dockerfile.broker
    image: broker
    container_name: consumer
    hostname: consumer.kafkasecurity_default
    depends_on:
      - kerberos
      - zookeeper
      - broker
      - producer
    command: kafka-console-consumer --bootstrap-server broker:9093 --topic X --consumer.config /etc/kafka/secrets/host.consumer.ssl.sasl.config
    environment:
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/consumer_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/krb.conf
    volumes:
      - ./secrets/:/etc/kafka/secrets
      - ./:/data
