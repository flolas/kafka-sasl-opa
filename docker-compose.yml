---
version: '2'
services:

  kerberos:
    build:
      context: .
      dockerfile: Dockerfile.kerberos
    container_name: kerberos
    hostname: kerberos.kafkasecurity_default
    image: kerberos
    environment:
      BOOTSTRAP: 0
    volumes:
      - ./secrets:/tmp/keytab
      - /dev/urandom:/dev/random
      - ./logs:/var/log/kerberos

  zookeeper:
    build:
      context: .
      dockerfile: Dockerfile.zookeeper
    image: zookeeper
    restart: on-failure:3
    container_name: zookeeper
    hostname: zookeeper.kafkasecurity_default
    depends_on:
      - kerberos
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_1_jaas.conf
        -Djava.security.krb5.conf=/etc/kafka/secrets/krb.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
    volumes:
      - ./secrets:/etc/kafka/secrets

  broker:
    build:
      context: .
      dockerfile: Dockerfile.broker
    image: broker
    container_name: broker
    hostname: broker.kafkasecurity_default
    depends_on:
      - kerberos
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper
#      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:9092'
      KAFKA_ADVERTISED_LISTENERS: "SASL_SSL://broker:9093"
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker1_truststore_creds
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/broker1_jaas.conf -Djava.security.krb5.conf=/etc/kafka/secrets/krb.conf -Dsun.security.krb5.debug=true"
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#      CONFLUENT_METRICS_ENABLE: 'true'
#      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    volumes:
      - ./secrets:/etc/kafka/secrets

#   schema_registry:
#     image: confluentinc/cp-schema-registry
#     hostname: schema_registry
#     depends_on:
#       - zookeeper
#       - broker
#     ports:
#       - "8081:8081"
#     environment:
#       SCHEMA_REGISTRY_HOST_NAME: schema_registry
#       SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

#   connect:
#     image: confluentinc/cp-kafka-connect
#     hostname: connect
#     depends_on:
#       - zookeeper
#       - broker
#       - schema_registry
#     ports:
#       - "8083:8083"
#     environment:
#       CONNECT_BOOTSTRAP_SERVERS: 'broker:9092'
#       CONNECT_REST_ADVERTISED_HOST_NAME: connect
#       CONNECT_REST_PORT: 8083
#       CONNECT_GROUP_ID: compose-connect-group
#       CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
#       CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
#       CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
#       CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
#       CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
#       CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
#       CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
#       CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
#       CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
#       CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#       CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
#       CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#       CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'

#   control-center:
#     image: confluentinc/cp-enterprise-control-center
#     hostname: control-center
#     depends_on:
#       - zookeeper
#       - broker
#       - schema_registry
#       - connect
#     ports:
#       - "9021:9021"
#     environment:
#       CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:9092'
#       CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
#       CONTROL_CENTER_REPLICATION_FACTOR: 1
#       CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
#       CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
#       CONFLUENT_METRICS_TOPIC_REPLICATION: 1
#       PORT: 9021
